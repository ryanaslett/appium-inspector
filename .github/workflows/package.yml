name: Create packages

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  electron:
    strategy:
      matrix:
        image: [windows-latest]
    runs-on: ${{ matrix.image }}

    steps:
      # --- Windows Azure OIDC Login and Sign ---
      - name: Log in to Azure (Windows Only)
        if: matrix.os == 'windows-latest'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
          
      - name: Azure PowerShell script
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            Write-Host "Attempting to retrieve Azure context details..."

            $context = Get-AzContext -ErrorAction Stop

            # Print details if successful
            Write-Host "Login Successful! Details below:"
            Write-Host "------------------------------------"
            Write-Host "Subscription Name: $($context.Subscription.Name)"
            Write-Host "Subscription ID:   $($context.Subscription.Id)"
            Write-Host "Tenant ID:         $($context.Tenant.Id)"
            Write-Host "Account ID (Principal): $($context.Account.Id)" # Often AppID for SPN
            Write-Host "Account Type:      $($context.Account.Type)"    # Should be ServicePrincipal
            Write-Host "------------------------------------"

      # - uses: actions/checkout@v4
      # - name: Use Node.js LTS
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: lts/*
      #     cache: 'npm'
      # - name: Install dependencies (Node.js)
      #   run: npm ci
      # - name: Build electron app
      #   run: npm run build:electron

      # - name: build package
      #   if: matrix.os == 'windows-latest'
      #   env:
      #     # Prevent electron-builder from auto-signing Windows
      #     CSC_IDENTITY_AUTO_DISCOVERY: false
      #     # DO NOT add WIN_CSC_* or Azure signing env vars here
      #   run: npx electron-builder build --x64 --arm64 --publish always

      # - name: Upload built packages
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: artifact-${{ matrix.image }}
      #     path: release/



  # plugin:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Use Node.js LTS
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: lts/*
  #         cache: 'npm'
  #     - name: Authenticate with npm registry
  #       run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #     - name: Install dependencies (Node.js)
  #       run: npm ci
  #     - name: generate contents
  #       run: npm run build:plugin
  #     - name: publish
  #       run: npm publish
  #       working-directory: plugins
